' VART
' ====
' An open-source tool for drawing 640x400 vector art on the mega65

#output "vart"

' menu system
' +------+--------+-----+------+----------+---------+------+------+------+-----+
' ! line ! circle ! box ! poly ! (x) fill ! palette ! load ! save ! undo ! redo!
' +------+--------+-----+------+----------+---------+------+------+------+-----+
' x = exit
' ? = show/hide menu
' ctrl+1-8 = select from 1st 8 colours
' mega+1-8 = select from 2nd 8 colours
' ctrl+d = choose from default palette
' ctrl+a = choose from alternate palette

.declares
'--------
#declare key$
#declare k,a$
#declare x%, y%, w%, h%, x2%, y2%
#declare mx%, my%, mb%
#declare menu_selection = -1
#declare ret%

#struct BUTTON x%, y%, w%, h%, text$

#define MAX_BTN = 5

BUTTON btns(MAX_BTN) = [     {x5F}
  [ 0,  0, 6, 3, "line" ],   {x5F}
  [ 6,  0, 8, 3, "circle" ], {x5F}
  [ 14, 0, 5, 3, "box" ],    {x5F}
  [ 19, 0, 6, 3, "fill" ],   {x5F}
  [ 25, 0, 6, 3, "exit" ]    {x5F}
] 

.main
'----
  gosub init   
  gosub draw_menu_system
  gosub check_input
  gosub ender
  end

.init
'----
  screen 0,640,400,4
  for k = 0 to 62
    read x%
    poke $0600+k, x%
  next k
  mouse on, 1
  sprite 0,1,1
  return

#define CHR_HEIGHT = 2
#define CHR_WIDTH = 1

#define CHR_DIR_UP = 1
#define CHR_DIR_RIGHT = 2
#define CHR_DIR_DOWN = 4
#define CHR_DIR_LEFT = 8

.draw_menu_system
'----------------
  ' clear prior items
  pen 0,0
  ' don't use box, too slow to fill
  ' box 0, 0, 640, 24, 1
  for k = 0 to 24
    line 0, k, 639, k
  next k
  pen 0,1

  ' draw items
  for k = 0 to MAX_BTN-1
    x%=btns_x%(k)
    y%=btns_y%(k)
    w%=(x% + btns_w%(k))
    h%=(y% + btns_h%(k))

    pen 0, 1
    if menu_selection=k then begin
      box x%*8, y%*8, w%*8, h%*8, 1
      pen 0, 0
    bend:else begin
      box x%*8, y%*8, w%*8, h%*8
    bend
    char x%+1, y%*8+4, CHR_HEIGHT, CHR_WIDTH, CHR_DIR_RIGHT, btns_text$(k)
    pen 0, 1
  next k
  return

.check_input
'-----------
  get a$
  if a$="x" then return
  rmouse mx%, my%, mb%
  mx%=(mx%-24)*2
  my%=(my%-50)*2

  if mb%=128 then begin
    gosub check_button_hit:if ret%=1 then goto endif_mb_1

  .endif_mb_1
  bend

  'debug stuff
  'a$ = str$(mx%) + ", " + str$(my%) + ", " + str$(mb%)
  'pen 0, 0
  'box 0, 64, 150, 80, 1
  'pen 0, 1
  'char 0, 64, CHR_HEIGHT, CHR_WIDTH, CHR_DIR_RIGHT, a$

  goto check_input

.check_button_hit
'----------------
  ret%=0
  for k = 0 to MAX_BTN-1
    x%=btns_x%(k)*8
    y%=btns_y%(k)*8
    w%=btns_w%(k)*8
    h%=btns_h%(k)*8
    x2%=x%+w%
    y2%=y%+h%
    if x%<=mx% and mx%<=x2% and y%<=my% and my%<=y2% then begin
      menu_selection = k
      gosub draw_menu_system
      k=MAX_BTN-1
      ret%=1
    bend
  next k
  return
  
.ender
'-----
  screen close
  mouse off
  return

.data
'mouse pointer
data %11111111, %00000000, %00000000
data %11111110, %00000000, %00000000
data %11111100, %00000000, %00000000
data %11111000, %00000000, %00000000
data %11111100, %00000000, %00000000
data %11101110, %00000000, %00000000
data %11000111, %00000000, %00000000
data %10000011, %10000000, %00000000

data %00000001, %11000000, %00000000
data %00000000, %11100000, %00000000
data %00000000, %01110000, %00000000
data %00000000, %00111000, %00000000
data %00000000, %00011100, %00000000
data %00000000, %00001110, %00000000
data %00000000, %00000111, %00000000
data %00000000, %00000011, %10000000

data %00000000, %00000001, %00000000
data %00000000, %00000000, %00000000
data %00000000, %00000000, %00000000
data %00000000, %00000000, %00000000
data %00000000, %00000000, %00000000
ÿ